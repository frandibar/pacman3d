#ifndef __SOCKETPROTOCOL_H__
#define __SOCKETPROTOCOL_H__
#include "common/socket.h"
#include "common/packet.h"
#include <string>
using std::string;

/**Clase que utiliza el socket pero agregando la capa de protocolo de transmision
 * 
 */
class SocketProtocol:private Socket {
	
  public:
    /// contruye un socket para cliente
    SocketProtocol(const string& host,const port_type &port):Socket(host,port){};
    /// constructor de socket para server
    explicit SocketProtocol(const string & host, const port_type & port, const int & cant_clientes):Socket(host, port, cant_clientes){};
    
    ///envia un paquete
    int send(const Packet &packet);
    
    ///recive un paquete
    int rcv(Packet &packet);
    
    ///acepta un nuevo cliente
    SocketProtocol* accept();
    
    ///devuelve si esta en buen estado
    operator bool () const;
    
    ///cliente se conecta a server
    void connect();
    
    ///cierra socket
    void close();
    
    /// se fija si hay datos q leer/escribir
    bool select(const bool &read,const int &mseg);
    
    /// devuelve host del cliente
    string getPeerName();
    
    /// devuelve host local
    string getSocketName();
};
#endif /* __SOCKETPROTOCOL_H__ */
